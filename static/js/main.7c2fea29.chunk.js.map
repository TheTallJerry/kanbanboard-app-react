{"version":3,"sources":["KanbanData.js","useToggleState.js","useInputState.js","KanbanEditForm.js","KanbanTask.js","KanbanColumn.js","KanbanModal.js","KanbanSidebar.js","KanbanPopup.js","Kanban.js","App.js","reportWebVitals.js","index.js"],"names":["columnsRawData","id","name","limit","color","taskIds","uuidv4","text","idColumn","user","first","second","third","useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","state","setState","useInputState","initialValue","value","setValue","e","target","KanbanEditForm","props","_useInputState","startText","_useInputState2","handleChangeText","_useInputState3","startUser","_useInputState4","handleChangeUser","React","createElement","onSubmit","preventDefault","editTask","taskId","toggle","className","htmlFor","type","cols","rows","onChange","required","style","backgroundColor","concat","KanbanTask","_useToggle","_useToggle2","isEditing","Draggable","draggableId","task","index","provided","Object","assign","draggableProps","dragHandleProps","ref","innerRef","Fragment","onClick","removeTask","KanbanColumn","columnData","Droppable","droppableId","droppableProps","map","key","placeholder","openModal","disabled","KanbanModal","handleChangeTask","_useInputState5","_useInputState6","handleChangeFirst","_useInputState7","_useInputState8","handleChangeSecond","_useInputState9","_useInputState10","handleChangeThird","newTask","modal","closeModal","addTask","TextField","label","helperText","multiline","defaultValue","fontSize","cursor","KanbanSidebar","BsBell","BsPersonLinesFill","BsSearch","BsQuestionCircle","KanbanPopup","closePopup","Kanban","JSON","parse","window","localStorage","getItem","columns","setColumns","_useState3","_useState4","setModal","_useState5","_useState6","popup","setPopup","openPopup","columnId","console","log","data","updatedColumns","column","filter","newUser","newText","useEffect","setItem","stringify","DragDropContext","onDragEnd","result","destination","source","start","finish","newTaskIds","Array","from","swapTask","splice","newColumnsState","c","newColumnsState2","_toConsumableArray","startTaskIds","_startTaskIds$splice","item","finishTaskIds","push","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c2fea29.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nconst taskLimitNumber = 5;\n\nexport const columnsRawData = [\n  {\n    id: 1,\n    name: \"TODO\",\n    limit: taskLimitNumber,\n    color: \"#A162D8 \",\n    taskIds: [\n      {\n        id: uuidv4(),\n        text: \"Status component\",\n        idColumn: 1,\n        user: \"Anna\",\n      },\n      {\n        id: uuidv4(),\n        text: \"New slides for presentation\",\n        idColumn: 1,\n        user: \"Anna\",\n      },\n    ],\n    first:\n      \"What's the situation? Feel free to explain it in as much detail as you'd like.\",\n    second: \"What part of the situation is most troubling?\",\n    third:\n      \"Why did you decide to take this action (there're countless ways to reduce stress, why this specific one in this specific case)?\",\n  },\n  {\n    id: 2,\n    name: \"In progress\",\n    limit: taskLimitNumber,\n    color: \"#5A9DF9\",\n    taskIds: [\n      { id: uuidv4(), text: \"Blog assets\", idColumn: 2, user: \"David\" },\n    ],\n    first:\n      \"How are you feeling at this very moment, right before starting this activity? What's on your mind?\",\n    second:\n      \"What kind of state of mind are you hoping to land on after this activity?\",\n    third: \"Why did you decide to start this activity at this moment?\",\n  },\n  {\n    id: 3,\n    name: \"Done\",\n    limit: taskLimitNumber,\n    color: \"#1387BE\",\n    taskIds: [\n      { id: uuidv4(), text: \"Change css img\", idColumn: 3, user: \"Anna\" },\n      { id: uuidv4(), text: \"Meeting\", idColumn: 3, user: \"Anna\" },\n    ],\n    first:\n      \"Re-type the summary of the situation in the following format: Trigger: Thought: Feeling: Behaviour\",\n    second: \"How did your plan/expectations go? What worked and what didn't?\",\n    third:\n      \"If you were to explore an alternative activity, how would you do it? Why?\",\n  },\n];\n","import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal);\n    const toggle = () => {\n        setState(!state);\n    };\n    return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    return [value, handleChange];\n};\n","import React from \"react\";\nimport useInputState from \"./useInputState\";\nimport \"./KanbanEditForm.css\";\n\nconst KanbanEditForm = (props) => {\n    const [text, handleChangeText] = useInputState(props.startText);\n    const [user, handleChangeUser] = useInputState(props.startUser);\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.editTask(props.taskId, user, text);\n                props.toggle();\n            }}\n            className=\"KanbanEditForm\"\n        >\n            <div className=\"KanbanEditForm-input-container\">\n                <label htmlFor=\"task\">Task: </label>\n                <textarea\n                    className=\"KanbanEditForm-input-textarea\"\n                    type=\"text\"\n                    cols=\"15\"\n                    rows=\"5\"\n                    value={text}\n                    onChange={handleChangeText}\n                    name=\"task\"\n                    id=\"task\"\n                    required\n                ></textarea>\n            </div>\n            <div className=\"KanbanEditForm-input-container\">\n                <label htmlFor=\"user\">For: </label>\n                <input\n                    className=\"KanbanEditForm-input\"\n                    type=\"text\"\n                    name=\"user\"\n                    id=\"user\"\n                    value={user}\n                    onChange={handleChangeUser}\n                    required\n                ></input>\n            </div>\n            <button\n                className=\"KanbanEditForm-btn\"\n                style={{ backgroundColor: `${props.color}` }}\n            >\n                Save\n            </button>\n        </form>\n    );\n};\n\nexport default KanbanEditForm;\n","import React from \"react\";\nimport \"./KanbanTask.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport useToggle from \"./useToggleState\";\nimport KanbanEditForm from \"./KanbanEditForm\";\n\nconst KanbanTask = (props) => {\n    const [isEditing, toggle] = useToggle(false);\n\n    return (\n        <Draggable draggableId={`${props.task.id}`} index={props.index}>\n            {(provided) => (\n                <div\n                    className=\"KanbanTask\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                >\n                    {isEditing ? (\n                        <KanbanEditForm\n                            color={props.color}\n                            editTask={props.editTask}\n                            taskId={props.task.id}\n                            toggle={toggle}\n                            startUser={props.task.user}\n                            startText={props.task.text}\n                        />\n                    ) : (\n                        <>\n                            <div className=\"KanbanTask-assigned\">\n                                <span className=\"KanbanTask-assigned-img\">\n                                    {props.task.user}\n                                </span>\n                            </div>\n                            <div className=\"KanbanTask-content\">\n                                {props.task.text}\n                            </div>\n                            <div className=\"KanbanTask-options\">\n                                <button\n                                    className=\"KanbanTask-btn-edit\"\n                                    style={{\n                                        backgroundColor: `${props.color}`,\n                                    }}\n                                    onClick={toggle}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    className=\"KanbanTask-btn-delete\"\n                                    style={{\n                                        backgroundColor: `${props.color}`,\n                                    }}\n                                    onClick={() =>\n                                        props.removeTask(props.task.id)\n                                    }\n                                >\n                                    Remove\n                                </button>\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport default KanbanTask;\n","import React from \"react\";\nimport KanbanTask from \"./KanbanTask\";\nimport \"./KanbanColumn.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst KanbanColumn = (props) => {\n    return (\n        <div\n            className=\"KanbanColumn\"\n            style={{ backgroundColor: `${props.columnData.color}` }}\n        >\n            <div className=\"KanbanColumn-main\">\n                <h2 className=\"KanbanColumn-name\">{props.columnData.name}</h2>\n                <p className=\"KanbanColumn-numbers\">\n                    {props.columnData.taskIds.length} / {props.columnData.limit}\n                    ;\n                </p>\n                <Droppable droppableId={`${props.columnData.id - 1}`}>\n                    {(provided) => (\n                        <div\n                            ref={provided.innerRef}\n                            className=\"KanbanColumns-tasks-container\"\n                            {...provided.droppableProps}\n                        >\n                            {props.columnData.taskIds.map((task, index) => {\n                                return (\n                                    <KanbanTask\n                                        key={task.id}\n                                        id={task.id}\n                                        task={task}\n                                        color={props.columnData.color}\n                                        index={index}\n                                        removeTask={props.removeTask}\n                                        editTask={props.editTask}\n                                    />\n                                );\n                            })}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n            {props.columnData.id === 1 && <div className=\"KanbanColumn-footer\">\n                <button\n                    className=\"KanbanColumn-btn-add\"\n                    onClick={() => props.openModal(props.columnData)}\n                    disabled={\n                        props.columnData.taskIds.length >= 5 ? true : false\n                    }\n                >\n                    Add task\n                </button>\n            </div>}\n        </div>\n    );\n};\n\nexport default KanbanColumn;\n","import React from \"react\";\nimport \"./KanbanModal.css\";\nimport useInputState from \"./useInputState\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TextField from \"@mui/material/TextField\";\n\nconst KanbanModal = (props) => {\n  const [task, handleChangeTask] = useInputState(\"\");\n  const [user, handleChangeUser] = useInputState(\"\");\n  const [first, handleChangeFirst] = useInputState(\"\");\n  const [second, handleChangeSecond] = useInputState(\"\");\n  const [third, handleChangeThird] = useInputState(\"\");\n\n  const columnData = props.columnData;\n\n  const newTask = {\n    id: uuidv4(),\n    text: task,\n    idColumn: props.modal,\n    user: user,\n  };\n\n  return (\n    <div className=\"KanbanModal\">\n      <section className=\"KanbanModal-content\">\n        <span\n          className=\"KanbanModal-close-btn\"\n          onClick={props.closeModal}\n        ></span>\n        <form\n          className=\"KanbanModal-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n              props.addTask(newTask);\n          }}\n        >\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"filled-search\"\n              label=\"Task:\"\n              type=\"search\"\n              value={task}\n              onChange={handleChangeTask}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"filled-search\"\n              label=\"For:\"\n              type=\"search\"\n              value={user}\n              onChange={handleChangeUser}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.first}\n              multiline\n              label=\"Question 1:\"\n              rows={3}\n              defaultValue=\"Default Value\"\n              value={first}\n              onChange={handleChangeFirst}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.second}\n              multiline\n              label=\"Question 2:\"\n              rows={3}\n              defaultValue=\"Default Value\"\n              value={second}\n              onChange={handleChangeSecond}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.third}\n              multiline\n              label=\"Question 3:\"\n              rows={3}\n              defaultValue=\"Default Value\"\n              value={third}\n              onChange={handleChangeThird}\n            />\n          </div>\n          <button className=\"KanbanModal-input-submit-btn\">\n            {!(first || second || third || (user && task)) ? \"Close\" : \"Submit\"}\n          </button>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default KanbanModal;\n","import React from \"react\";\nimport \"./KanbanSidebar.css\";\nimport {\n    BsQuestionCircle,\n    BsSearch,\n    BsPersonLinesFill,\n    BsBell,\n} from \"react-icons/bs\";\n\nconst style = { color: \"white\", fontSize: \"1.5rem\", cursor: \"pointer\" };\n\nconst KanbanSidebar = () => {\n    return (\n        <div className=\"KanbanSidebar\">\n            <div className=\"KanbanSidebar-upperColumn\">\n                <BsBell style={style} />\n            </div>\n            <div className=\"KanbanSidebar-bottomColumn\">\n                <BsPersonLinesFill style={style} />\n                <BsSearch style={style} />\n                <BsQuestionCircle style={style} />\n            </div>\n        </div>\n    );\n};\n\nexport default KanbanSidebar;\n","import React from \"react\";\r\nimport \"./KanbanPopup.css\";\r\nimport useInputState from \"./useInputState\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst KanbanPopup = (props) => {\r\n  const [first, handleChangeFirst] = useInputState(\"\");\r\n  const [second, handleChangeSecond] = useInputState(\"\");\r\n  const [third, handleChangeThird] = useInputState(\"\");\r\n\r\n  const columnData = props.columnData;\r\n\r\n  return (\r\n    <div className=\"KanbanPopup\">\r\n      <section className=\"KanbanPopup-content\">\r\n        <span\r\n          className=\"KanbanPopup-close-btn\"\r\n          onClick={props.closePopup}\r\n        ></span>\r\n        <form\r\n          className=\"KanbanPopup-form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"KanbanPopup-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.first}\r\n              multiline\r\n              label=\"Question 1:\"\r\n              rows={3}\r\n              value={first}\r\n              onChange={handleChangeFirst}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanPopup-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.second}\r\n              multiline\r\n              label=\"Question 2:\"\r\n              rows={3}\r\n              value={second}\r\n              onChange={handleChangeSecond}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanPopup-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.third}\r\n              multiline\r\n              label=\"Question 3:\"\r\n              rows={3}\r\n              value={third}\r\n              onChange={handleChangeThird}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"KanbanPopup-input-submit-btn\"\r\n            onClick={props.closePopup}\r\n          >\r\n            {!(first || second || third) ? \"Close\" : \"Submit\"}\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanPopup;\r\n","import React, { useEffect, useState } from \"react\";\nimport { columnsRawData } from \"./KanbanData\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport \"./Kanban.css\";\nimport KanbanModal from \"./KanbanModal\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanSidebar from \"./KanbanSidebar\";\nimport KanbanPopup from \"./KanbanPopup\";\n\nconst Kanban = () => {\n  const [columns, setColumns] = useState(\n    JSON.parse(window.localStorage.getItem(\"columns\")) || columnsRawData\n  );\n\n  const [modal, setModal] = useState(false);\n\n  const [popup, setPopup] = useState(false);\n\n  const openPopup = (columnId) => {\n    console.log(columnId);\n    setPopup(columnId);\n  };\n\n  const closePopup = () => {\n    setPopup(false);\n  };\n\n    const onDragEnd = (result) => {\n        const { destination, source } = result;\n\n        if (!destination) {\n            console.log(\"no destination\");\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            console.log(\"index and destination the same\");\n            return;\n        }\n\n        const start = columns[source.droppableId];\n        const finish = columns[destination.droppableId];\n\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            const swapTask = newTaskIds[source.index];\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, swapTask);\n\n            const newColumnsState = columns.map((c) => {\n                if (c.id === start.id) {\n                    c.taskIds = newTaskIds;\n                    return c;\n                } else return c;\n            });\n\n            const newColumnsState2 = [...newColumnsState];\n            setColumns(newColumnsState2);\n        } else {\n            if (finish.id > start.id){\n                openPopup(finish.id);\n            }\n            if (finish.taskIds.length < finish.limit) {\n                const startTaskIds = Array.from(start.taskIds);\n                const [item] = startTaskIds.splice(source.index, 1);\n\n                const finishTaskIds = Array.from(finish.taskIds);\n                finishTaskIds.splice(destination.index, 0, item);\n\n                const newColumnsState = columns.map((c) => {\n                    if (c.id === start.id) {\n                        c.taskIds = startTaskIds;\n                        return c;\n                    } else if (c.id === finish.id) {\n                        c.taskIds = finishTaskIds;\n                        return c;\n                    } else return c;\n                });\n                const newColumnsState2 = [...newColumnsState];\n                setColumns(newColumnsState2);\n            } else return;\n        }\n    };\n\n    const openModal = (data) => {\n        const columnId = data.id;\n        setModal(columnId);\n    };\n\n    const closeModal = () => {\n        setModal(false);\n    };\n\n    const addTask = (newTask) => {\n        setModal(false);\n        if (newTask.text && newTask.user) {\n          const updatedColumns = columns.map((column) => {\n            if (column.id === newTask.idColumn && column.taskIds.length < 5) {\n                column.taskIds.push(newTask);\n                return column;\n            } else return column;\n        });\n        setColumns(updatedColumns);\n        }\n    };\n\n    const removeTask = (taskId) => {\n        const updatedColumns = columns\n            .map((column) => {\n                return Object.assign({}, column, {\n                    taskIds: column.taskIds.filter(\n                        (task) => task.id !== taskId\n                    ),\n                });\n            })\n            .filter((column) => column.taskIds.length >= 0);\n        setColumns(updatedColumns);\n    };\n\n    const editTask = (taskId, newUser, newText) => {\n        const updatedColumns = columns.map((column) => {\n            return Object.assign({}, column, {\n                taskIds: column.taskIds.map((task) => {\n                    if (task.id === taskId) {\n                        task.user = newUser;\n                        task.text = newText;\n                        return task;\n                    }\n                    return task;\n                }),\n            });\n        });\n        setColumns(updatedColumns);\n    };\n\n    useEffect(() => {\n        window.localStorage.setItem(\"columns\", JSON.stringify(columns));\n    }, [columns]);\n\n    return (\n      <>\n        <KanbanSidebar />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className=\"Kanban\">\n            {modal && (\n              <KanbanModal\n                closeModal={closeModal}\n                addTask={addTask}\n                columnData={columns[modal - 1]}\n                modal={modal}\n              />\n            )}\n            {popup && popup !== 1 && (\n              <KanbanPopup\n                closePopup={closePopup}\n                columnData={columns[popup - 1]}\n              />\n            )}\n            <h1 className=\"Kanban-title\">Kanban</h1>\n            <div className=\"Kanban-columns-container\">\n              {columns.map((c) => {\n                return (\n                  <KanbanColumn\n                    columnData={c}\n                    key={c.name}\n                    openModal={openModal}\n                    openPopup={openPopup}\n                    removeTask={removeTask}\n                    editTask={editTask}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </DragDropContext>\n      </>\n    );\n};\n\nexport default Kanban;\n","import Kanban from \"./Kanban\";\nimport React from \"react\"\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Kanban />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}