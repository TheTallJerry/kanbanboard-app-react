{"version":3,"sources":["KanbanData.js","useToggleState.js","useInputState.js","KanbanEditForm.js","KanbanTask.js","KanbanColumn.js","KanbanModal.js","KanbanSidebar.js","KanbanPopup.js","Kanban.js","App.js","reportWebVitals.js","index.js"],"names":["columnsRawData","id","name","limit","color","taskIds","uuidv4","text","idColumn","user","first","second","third","useToggle","initialVal","useState","state","setState","initialValue","value","setValue","e","target","KanbanEditForm","props","useInputState","startText","handleChangeText","startUser","handleChangeUser","onSubmit","preventDefault","editTask","taskId","toggle","className","htmlFor","type","cols","rows","onChange","required","style","backgroundColor","KanbanTask","isEditing","draggableId","task","index","provided","draggableProps","dragHandleProps","ref","innerRef","onClick","removeTask","KanbanColumn","columnData","length","droppableId","droppableProps","map","placeholder","openModal","disabled","KanbanModal","newTask","closeModal","addTask","fontSize","cursor","KanbanSidebar","KanbanPopup","handleChangeFirst","handleChangeSecond","handleChangeThird","closePopup","Kanban","JSON","parse","window","localStorage","getItem","columns","setColumns","modal","setModal","popup","setPopup","openPopup","columnId","console","log","data","updatedColumns","column","Object","assign","filter","newUser","newText","useEffect","setItem","stringify","onDragEnd","result","destination","source","start","finish","newTaskIds","Array","from","swapTask","splice","newColumnsState","c","newColumnsState2","startTaskIds","item","finishTaskIds","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68ef7208.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nconst taskLimitNumber = 5;\n\nexport const columnsRawData = [\n  {\n    id: 1,\n    name: \"TODO\",\n    limit: taskLimitNumber,\n    color: \"#A162D8 \",\n    taskIds: [\n      {\n        id: uuidv4(),\n        text: \"Status component\",\n        idColumn: 1,\n        user: \"Anna\",\n      },\n      {\n        id: uuidv4(),\n        text: \"New slides for presentation\",\n        idColumn: 1,\n        user: \"Anna\",\n      },\n    ],\n    first:\n      \"What's the situation? Feel free to explain it in as much detail as you'd like.\",\n    second: \"What part of the situation is most troubling?\",\n    third:\n      \"Why did you decide to take this action (there're countless ways to reduce stress, why this specific one in this specific case)?\",\n  },\n  {\n    id: 2,\n    name: \"In progress\",\n    limit: taskLimitNumber,\n    color: \"#5A9DF9\",\n    taskIds: [\n      { id: uuidv4(), text: \"Blog assets\", idColumn: 2, user: \"David\" },\n    ],\n    first:\n      \"How are you feeling at this very moment, right before starting this activity? What's on your mind?\",\n    second:\n      \"What kind of state of mind are you hoping to land on after this activity?\",\n    third: \"Why did you decide to start this activity at this moment?\",\n  },\n  {\n    id: 3,\n    name: \"Done\",\n    limit: taskLimitNumber,\n    color: \"#1387BE\",\n    taskIds: [\n      { id: uuidv4(), text: \"Change css img\", idColumn: 3, user: \"Anna\" },\n      { id: uuidv4(), text: \"Meeting\", idColumn: 3, user: \"Anna\" },\n    ],\n    first:\n      \"Re-type the summary of the situation in the following format: Trigger: Thought: Feeling: Behaviour\",\n    second: \"How did your plan/expectations go? What worked and what didn't?\",\n    third:\n      \"If you were to explore an alternative activity, how would you do it? Why?\",\n  },\n];\n","import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal);\n    const toggle = () => {\n        setState(!state);\n    };\n    return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    return [value, handleChange];\n};\n","import React from \"react\";\nimport useInputState from \"./useInputState\";\nimport \"./KanbanEditForm.css\";\n\nconst KanbanEditForm = (props) => {\n    const [text, handleChangeText] = useInputState(props.startText);\n    const [user, handleChangeUser] = useInputState(props.startUser);\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.editTask(props.taskId, user, text);\n                props.toggle();\n            }}\n            className=\"KanbanEditForm\"\n        >\n            <div className=\"KanbanEditForm-input-container\">\n                <label htmlFor=\"task\">Task: </label>\n                <textarea\n                    className=\"KanbanEditForm-input-textarea\"\n                    type=\"text\"\n                    cols=\"15\"\n                    rows=\"5\"\n                    value={text}\n                    onChange={handleChangeText}\n                    name=\"task\"\n                    id=\"task\"\n                    required\n                ></textarea>\n            </div>\n            <div className=\"KanbanEditForm-input-container\">\n                <label htmlFor=\"user\">For: </label>\n                <input\n                    className=\"KanbanEditForm-input\"\n                    type=\"text\"\n                    name=\"user\"\n                    id=\"user\"\n                    value={user}\n                    onChange={handleChangeUser}\n                    required\n                ></input>\n            </div>\n            <button\n                className=\"KanbanEditForm-btn\"\n                style={{ backgroundColor: `${props.color}` }}\n            >\n                Save\n            </button>\n        </form>\n    );\n};\n\nexport default KanbanEditForm;\n","import React from \"react\";\nimport \"./KanbanTask.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport useToggle from \"./useToggleState\";\nimport KanbanEditForm from \"./KanbanEditForm\";\n\nconst KanbanTask = (props) => {\n    const [isEditing, toggle] = useToggle(false);\n\n    return (\n        <Draggable draggableId={`${props.task.id}`} index={props.index}>\n            {(provided) => (\n                <div\n                    className=\"KanbanTask\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                >\n                    {isEditing ? (\n                        <KanbanEditForm\n                            color={props.color}\n                            editTask={props.editTask}\n                            taskId={props.task.id}\n                            toggle={toggle}\n                            startUser={props.task.user}\n                            startText={props.task.text}\n                        />\n                    ) : (\n                        <>\n                            <div className=\"KanbanTask-assigned\">\n                                <span className=\"KanbanTask-assigned-img\">\n                                    {props.task.user}\n                                </span>\n                            </div>\n                            <div className=\"KanbanTask-content\">\n                                {props.task.text}\n                            </div>\n                            <div className=\"KanbanTask-options\">\n                                <button\n                                    className=\"KanbanTask-btn-edit\"\n                                    style={{\n                                        backgroundColor: `${props.color}`,\n                                    }}\n                                    onClick={toggle}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    className=\"KanbanTask-btn-delete\"\n                                    style={{\n                                        backgroundColor: `${props.color}`,\n                                    }}\n                                    onClick={() =>\n                                        props.removeTask(props.task.id)\n                                    }\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport default KanbanTask;\n","import React from \"react\";\nimport KanbanTask from \"./KanbanTask\";\nimport \"./KanbanColumn.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst KanbanColumn = (props) => {\n    return (\n        <div\n            className=\"KanbanColumn\"\n            style={{ backgroundColor: `${props.columnData.color}` }}\n        >\n            <div className=\"KanbanColumn-main\">\n                <h2 className=\"KanbanColumn-name\">{props.columnData.name}</h2>\n                <p className=\"KanbanColumn-numbers\">\n                    {props.columnData.taskIds.length} / {props.columnData.limit}\n                    ;\n                </p>\n                <Droppable droppableId={`${props.columnData.id - 1}`}>\n                    {(provided) => (\n                        <div\n                            ref={provided.innerRef}\n                            className=\"KanbanColumns-tasks-container\"\n                            {...provided.droppableProps}\n                        >\n                            {props.columnData.taskIds.map((task, index) => {\n                                return (\n                                    <KanbanTask\n                                        key={task.id}\n                                        id={task.id}\n                                        task={task}\n                                        color={props.columnData.color}\n                                        index={index}\n                                        removeTask={props.removeTask}\n                                        editTask={props.editTask}\n                                    />\n                                );\n                            })}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n            {props.columnData.id === 1 && <div className=\"KanbanColumn-footer\">\n                <button\n                    className=\"KanbanColumn-btn-add\"\n                    onClick={() => props.openModal(props.columnData)}\n                    disabled={\n                        props.columnData.taskIds.length >= 5 ? true : false\n                    }\n                >\n                    Add task\n                </button>\n            </div>}\n        </div>\n    );\n};\n\nexport default KanbanColumn;\n","import React from \"react\";\nimport \"./KanbanModal.css\";\nimport useInputState from \"./useInputState\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst KanbanModal = (props) => {\n    const [text, handleChangeText] = useInputState(\"\");\n    const [user, handleChangeUser] = useInputState(\"\");\n\n    const idColumn = props.columnData;\n\n    const newTask = {\n        id: uuidv4(),\n        text: text,\n        idColumn: idColumn,\n        user: user,\n    };\n\n    return (\n        <div className=\"KanbanModal\">\n            <section className=\"KanbanModal-content\">\n                <span\n                    className=\"KanbanModal-close-btn\"\n                    onClick={props.closeModal}\n                ></span>\n                <form\n                    className=\"KanbanModal-form\"\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        props.addTask(newTask);\n                    }}\n                >\n                    <div className=\"KanbanModal-input-container\">\n                        <label htmlFor=\"task\">Task: </label>\n                        <textarea\n                            className=\"KanbanModal-input\"\n                            type=\"text\"\n                            cols=\"20\"\n                            rows=\"5\"\n                            value={text}\n                            onChange={handleChangeText}\n                            name=\"task\"\n                            id=\"task\"\n                        ></textarea>\n                    </div>\n                    <div className=\"KanbanModal-input-container\">\n                        <label htmlFor=\"user\">For: </label>\n                        <input\n                            className=\"KanbanModal-input\"\n                            type=\"text\"\n                            name=\"user\"\n                            id=\"user\"\n                            value={user}\n                            onChange={handleChangeUser}\n                        ></input>\n                    </div>\n                    <button className=\"KanbanModal-input-submit-btn\">\n                        Submit\n                    </button>\n                </form>\n            </section>\n        </div>\n    );\n};\n\nexport default KanbanModal;\n","import React from \"react\";\nimport \"./KanbanSidebar.css\";\nimport {\n    BsQuestionCircle,\n    BsSearch,\n    BsPersonLinesFill,\n    BsBell,\n} from \"react-icons/bs\";\n\nconst style = { color: \"white\", fontSize: \"1.5rem\", cursor: \"pointer\" };\n\nconst KanbanSidebar = () => {\n    return (\n        <div className=\"KanbanSidebar\">\n            <div className=\"KanbanSidebar-upperColumn\">\n                <BsBell style={style} />\n            </div>\n            <div className=\"KanbanSidebar-bottomColumn\">\n                <BsPersonLinesFill style={style} />\n                <BsSearch style={style} />\n                <BsQuestionCircle style={style} />\n            </div>\n        </div>\n    );\n};\n\nexport default KanbanSidebar;\n","import React from \"react\";\r\nimport \"./KanbanPopup.css\";\r\nimport useInputState from \"./useInputState\";\r\n\r\nconst KanbanPopup = (props) => {\r\n  const [first, handleChangeFirst] = useInputState(\"\");\r\n  const [second, handleChangeSecond] = useInputState(\"\");\r\n  const [third, handleChangeThird] = useInputState(\"\");\r\n\r\n  const columnData = props.columnData;\r\n\r\n  return (\r\n    <div className=\"KanbanPopup\">\r\n      <section className=\"KanbanPopup-content\">\r\n        <span\r\n          className=\"KanbanPopup-close-btn\"\r\n          onClick={props.closePopup}\r\n        ></span>\r\n        <form\r\n          className=\"KanbanPopup-form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"KanbanPopup-input-container\">\r\n            <div className=\"KanbanModel-input-label\">\r\n              <label htmlFor=\"first\">{columnData.first}</label>\r\n            </div>\r\n            <input\r\n              className=\"KanbanPopup-input\"\r\n              type=\"text\"\r\n              name=\"first\"\r\n              id=\"first\"\r\n              value={first}\r\n              onChange={handleChangeFirst}\r\n            ></input>\r\n          </div>\r\n          <div className=\"KanbanPopup-input-container\">\r\n            <div className=\"KanbanModel-input-label\">\r\n              <label htmlFor=\"second\">{columnData.second}</label>\r\n            </div>\r\n            <input\r\n              className=\"KanbanPopup-input\"\r\n              type=\"text\"\r\n              name=\"second\"\r\n              id=\"second\"\r\n              value={second}\r\n              onChange={handleChangeSecond}\r\n            ></input>\r\n          </div>\r\n          <div className=\"KanbanPopup-input-container\">\r\n            <div className=\"KanbanModel-input-label\">\r\n              <label htmlFor=\"third\">{columnData.third}</label>\r\n            </div>\r\n            <input\r\n              className=\"KanbanPopup-input\"\r\n              type=\"text\"\r\n              name=\"third\"\r\n              id=\"third\"\r\n              value={third}\r\n              onChange={handleChangeThird}\r\n            ></input>\r\n          </div>\r\n          <button\r\n            className=\"KanbanPopup-input-submit-btn\"\r\n            onClick={props.closePopup}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanPopup;\r\n","import React, { useEffect, useState } from \"react\";\nimport { columnsRawData } from \"./KanbanData\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport \"./Kanban.css\";\nimport KanbanModal from \"./KanbanModal\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanSidebar from \"./KanbanSidebar\";\nimport KanbanPopup from \"./KanbanPopup\";\n\nconst Kanban = () => {\n  const [columns, setColumns] = useState(\n    JSON.parse(window.localStorage.getItem(\"columns\")) || columnsRawData\n  );\n\n  const [modal, setModal] = useState(false);\n\n  const [popup, setPopup] = useState(false);\n\n  const openPopup = (columnId) => {\n    console.log(columnId);\n    setPopup(columnId);\n  };\n\n  const closePopup = () => {\n    setPopup(false);\n  };\n\n    const onDragEnd = (result) => {\n        const { destination, source } = result;\n\n        if (!destination) {\n            console.log(\"no destination\");\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            console.log(\"index and destination the same\");\n            return;\n        }\n\n        const start = columns[source.droppableId];\n        const finish = columns[destination.droppableId];\n\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            const swapTask = newTaskIds[source.index];\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, swapTask);\n\n            const newColumnsState = columns.map((c) => {\n                if (c.id === start.id) {\n                    c.taskIds = newTaskIds;\n                    return c;\n                } else return c;\n            });\n\n            const newColumnsState2 = [...newColumnsState];\n            setColumns(newColumnsState2);\n        } else {\n            openPopup(finish.id);\n            if (finish.taskIds.length < finish.limit) {\n                const startTaskIds = Array.from(start.taskIds);\n                const [item] = startTaskIds.splice(source.index, 1);\n\n                const finishTaskIds = Array.from(finish.taskIds);\n                finishTaskIds.splice(destination.index, 0, item);\n\n                const newColumnsState = columns.map((c) => {\n                    if (c.id === start.id) {\n                        c.taskIds = startTaskIds;\n                        return c;\n                    } else if (c.id === finish.id) {\n                        c.taskIds = finishTaskIds;\n                        return c;\n                    } else return c;\n                });\n                const newColumnsState2 = [...newColumnsState];\n                setColumns(newColumnsState2);\n            } else return;\n        }\n    };\n\n    const openModal = (data) => {\n        const columnId = data.id;\n        setModal(columnId);\n    };\n\n    const closeModal = () => {\n        setModal(false);\n    };\n\n    const addTask = (newTask) => {\n        setModal(false);\n        const updatedColumns = columns.map((column) => {\n            if (column.id === newTask.idColumn && column.taskIds.length < 5) {\n                column.taskIds.push(newTask);\n                return column;\n            } else return column;\n        });\n        setColumns(updatedColumns);\n    };\n\n    const removeTask = (taskId) => {\n        const updatedColumns = columns\n            .map((column) => {\n                return Object.assign({}, column, {\n                    taskIds: column.taskIds.filter(\n                        (task) => task.id !== taskId\n                    ),\n                });\n            })\n            .filter((column) => column.taskIds.length >= 0);\n        setColumns(updatedColumns);\n    };\n\n    const editTask = (taskId, newUser, newText) => {\n        const updatedColumns = columns.map((column) => {\n            return Object.assign({}, column, {\n                taskIds: column.taskIds.map((task) => {\n                    if (task.id === taskId) {\n                        task.user = newUser;\n                        task.text = newText;\n                        return task;\n                    }\n                    return task;\n                }),\n            });\n        });\n        setColumns(updatedColumns);\n    };\n\n    useEffect(() => {\n        window.localStorage.setItem(\"columns\", JSON.stringify(columns));\n    }, [columns]);\n\n    return (\n      <>\n        <KanbanSidebar />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className=\"Kanban\">\n            {modal && (\n              <KanbanModal\n                closeModal={closeModal}\n                addTask={addTask}\n                columnData={modal}\n              />\n            )}\n            {popup && <KanbanPopup closePopup={closePopup} columnData={columns[popup - 1]} />}\n            <h1 className=\"Kanban-title\">Kanban</h1>\n            <div className=\"Kanban-columns-container\">\n              {columns.map((c) => {\n                return (\n                  <KanbanColumn\n                    columnData={c}\n                    key={c.name}\n                    openModal={openModal}\n                    openPopup={openPopup}\n                    removeTask={removeTask}\n                    editTask={editTask}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </DragDropContext>\n      </>\n    );\n};\n\nexport default Kanban;\n","import Kanban from \"./Kanban\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Kanban />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}