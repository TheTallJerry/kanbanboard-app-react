{"version":3,"sources":["KanbanData.js","useToggleState.js","useInputState.js","KanbanEditForm.js","KanbanTask.js","KanbanColumn.js","KanbanModal.js","KanbanSidebar.js","KanbanPopup.js","Kanban.js","App.js","reportWebVitals.js","index.js"],"names":["columnsRawData","id","name","limit","color","taskIds","uuidv4","text","idColumn","user","first","second","third","useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","state","setState","useInputState","initialValue","value","setValue","e","target","KanbanEditForm","props","_useInputState","startText","_useInputState2","handleChangeText","_useInputState3","startUser","_useInputState4","handleChangeUser","React","createElement","onSubmit","preventDefault","editTask","taskId","toggle","className","Box","m","pt","TextField","onChange","label","style","padding","backgroundColor","concat","KanbanTask","_useToggle","_useToggle2","isEditing","Draggable","draggableId","task","index","provided","Card","Object","assign","draggableProps","dragHandleProps","ref","innerRef","Fragment","CardHeader","title","CardContent","Typography","variant","CardActions","disableSpacing","IconButton","aria-label","onClick","EditIcon","removeTask","DeleteIcon","KanbanColumn","columnData","maxHeight","overflow","Droppable","droppableId","droppableProps","map","key","placeholder","Button","openModal","disabled","KanbanModal","handleChangeTask","_useInputState5","_useInputState6","handleChangeFirst","_useInputState7","_useInputState8","handleChangeSecond","_useInputState9","_useInputState10","handleChangeThird","newTask","modal","closeModal","addTask","display","type","helperText","multiline","rows","defaultValue","fontSize","cursor","KanbanSidebar","BsBell","BsPersonLinesFill","BsSearch","BsQuestionCircle","KanbanPopup","closePopup","Kanban","JSON","parse","window","localStorage","getItem","columns","setColumns","_useState3","_useState4","setModal","_useState5","_useState6","popup","setPopup","openPopup","columnId","console","log","data","updatedColumns","column","filter","newUser","newText","useEffect","setItem","stringify","DragDropContext","onDragEnd","result","destination","source","start","finish","newTaskIds","Array","from","swapTask","splice","newColumnsState","c","newColumnsState2","_toConsumableArray","startTaskIds","_startTaskIds$splice","item","finishTaskIds","push","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56c09660.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nconst taskLimitNumber = 5;\n\nexport const columnsRawData = [\n  {\n    id: 1,\n    name: \"TODO\",\n    limit: taskLimitNumber,\n    color: \"#A162D8 \",\n    taskIds: [\n      {\n        id: uuidv4(),\n        text: \"Status component\",\n        idColumn: 1,\n        user: \"CSC428\",\n      },\n      {\n        id: uuidv4(),\n        text: \"New slides for presentation\",\n        idColumn: 1,\n        user: \"CSC428\",\n      },\n    ],\n    first:\n      \"What's the situation? Feel free to explain it in as much detail as you'd like.\",\n    second: \"What part of the situation is most troubling?\",\n    third:\n      \"Why did you decide to take this action (there're countless ways to reduce stress, why this specific one in this specific case)?\",\n  },\n  {\n    id: 2,\n    name: \"In progress\",\n    limit: taskLimitNumber,\n    color: \"#5A9DF9\",\n    taskIds: [\n      { id: uuidv4(), text: \"Take a 5min break\", idColumn: 2, user: \"Mental Health\" },\n    ],\n    first:\n      \"How are you feeling at this very moment, right before starting this activity? What's on your mind?\",\n    second:\n      \"What kind of state of mind are you hoping to land on after this activity?\",\n    third: \"Why did you decide to start this activity at this moment?\",\n  },\n  {\n    id: 3,\n    name: \"Done\",\n    limit: taskLimitNumber,\n    color: \"#1387BE\",\n    taskIds: [\n      { id: uuidv4(), text: \"Change css img\", idColumn: 3, user: \"CSC428\" },\n      { id: uuidv4(), text: \"Meeting\", idColumn: 3, user: \"CSC428\" },\n    ],\n    first:\n      \"Re-type the summary of the situation in the following format: Trigger: Thought: Feeling: Behaviour\",\n    second: \"How did your plan/expectations go? What worked and what didn't?\",\n    third:\n      \"If you were to explore an alternative activity, how would you do it? Why?\",\n  },\n];\n","import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal);\n    const toggle = () => {\n        setState(!state);\n    };\n    return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    return [value, handleChange];\n};\n","import React from \"react\";\nimport useInputState from \"./useInputState\";\nimport \"./KanbanEditForm.css\";\nimport { Box, TextField } from \"@mui/material\";\n\nconst KanbanEditForm = (props) => {\n    const [text, handleChangeText] = useInputState(props.startText);\n    const [user, handleChangeUser] = useInputState(props.startUser);\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.editTask(props.taskId, user, text);\n                props.toggle();\n            }}\n            className=\"KanbanEditForm\"\n        >   \n            <Box m={2} pt={3}>\n                <TextField\n                    value={text}\n                    onChange={handleChangeText}\n                    label=\"Task\"\n                    style={{padding: '10px'}}\n                />\n                <TextField\n                    value={user}\n                    onChange={handleChangeUser}\n                    label=\"For:\"\n                    style={{padding: '10px'}}\n                />\n            </Box>\n            <button\n                className=\"KanbanEditForm-btn\"\n                style={{ backgroundColor: `${props.color}` }}\n            >\n                Save\n            </button>\n        </form>\n    );\n};\n\nexport default KanbanEditForm;\n","import React from \"react\";\nimport \"./KanbanTask.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport useToggle from \"./useToggleState\";\nimport KanbanEditForm from \"./KanbanEditForm\";\nimport { Button, Card, CardHeader, CardContent, Typography, CardActions, IconButton } from \"@mui/material\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst KanbanTask = (props) => {\n    const [isEditing, toggle] = useToggle(false);\n\n    return (\n        <Draggable draggableId={`${props.task.id}`} index={props.index}>\n            {(provided) => (\n                <Card\n                    className=\"KanbanTask\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                >\n                    {isEditing ? (\n                        <KanbanEditForm\n                            color={props.color}\n                            editTask={props.editTask}\n                            taskId={props.task.id}\n                            toggle={toggle}\n                            startUser={props.task.user}\n                            startText={props.task.text}\n                        />\n                    ) : (\n                        <>\n                            <CardHeader title={ props.task.user }/>\n                            <CardContent>\n                                <Typography variant=\"body2\" color=\"text.primary\">\n                                {props.task.text}\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label=\"Edit Task\" onClick={toggle}>\n                                    <EditIcon />\n                                </IconButton>\n                                <IconButton aria-label=\"Delete Task\" onClick={() => props.removeTask(props.task.id)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </CardActions>\n                        </>\n                    )}\n                </Card>\n            )}\n        </Draggable>\n    );\n};\n\nexport default KanbanTask;\n","import React from \"react\";\nimport KanbanTask from \"./KanbanTask\";\nimport \"./KanbanColumn.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Button } from \"@mui/material\";\n\nconst KanbanColumn = (props) => {\n    return (\n        <div\n            className=\"KanbanColumn\"\n            style={{ backgroundColor: `${props.columnData.color}` }}\n        >\n            <div className=\"KanbanColumn-main\">\n                <h2 className=\"KanbanColumn-name\">{props.columnData.name}</h2>\n                <p className=\"KanbanColumn-numbers\">\n                    {props.columnData.taskIds.length} / {props.columnData.limit}\n                    ;\n                </p>\n                <div style={{ maxHeight: 800, overflow: 'auto' }}>\n                    <Droppable droppableId={`${props.columnData.id - 1}`}>\n                        {(provided) => (\n                            <div\n                                ref={provided.innerRef}\n                                className=\"KanbanColumns-tasks-container\"\n                                {...provided.droppableProps}\n                            >\n                                {props.columnData.taskIds.map((task, index) => {\n                                    return (\n                                        <KanbanTask\n                                            key={task.id}\n                                            id={task.id}\n                                            task={task}\n                                            color={props.columnData.color}\n                                            index={index}\n                                            removeTask={props.removeTask}\n                                            editTask={props.editTask}\n                                        />\n                                    );\n                                })}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </div>\n            </div>\n            {props.columnData.id === 1 && <Button variant=\"contained\" onClick={() => props.openModal(props.columnData)}\n                disabled={\n                    props.columnData.taskIds.length >= 5 ? true : false\n                }>Add Task\n            </Button>\n            }\n        </div>\n    );\n};\n\nexport default KanbanColumn;\n","import React from \"react\";\nimport \"./KanbanModal.css\";\nimport useInputState from \"./useInputState\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TextField from \"@mui/material/TextField\";\n\nconst KanbanModal = (props) => {\n  const [task, handleChangeTask] = useInputState(\"\");\n  const [user, handleChangeUser] = useInputState(\"\");\n  const [first, handleChangeFirst] = useInputState(\"\");\n  const [second, handleChangeSecond] = useInputState(\"\");\n  const [third, handleChangeThird] = useInputState(\"\");\n\n  const columnData = props.columnData;\n\n  const newTask = {\n    id: uuidv4(),\n    text: task,\n    idColumn: props.modal,\n    user: user,\n  };\n\n  return (\n    <div className=\"KanbanModal\">\n      <section className=\"KanbanModal-content\">\n        <span\n          className=\"KanbanModal-close-btn\"\n          onClick={props.closeModal}\n        ></span>\n        <form\n          className=\"KanbanModal-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            props.addTask(newTask);\n          }}\n        >\n          <div style={{display: 'flex'}}>\n            <TextField\n              id=\"filled-search\"\n              label=\"Task:\"\n              type=\"search\"\n              value={task}\n              variant=\"standard\"\n              onChange={handleChangeTask}\n              style={{padding: 6}}\n            />\n            <TextField\n              id=\"filled-search\"\n              label=\"For:\"\n              type=\"search\"\n              value={user}\n              variant=\"standard\"\n              onChange={handleChangeUser}\n              style={{padding: 6}}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.first}\n              multiline\n              label=\"Question 1:\"\n              rows={3}\n              defaultValue=\"Default Value\"\n              value={first}\n              onChange={handleChangeFirst}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.second}\n              multiline\n              label=\"Question 2:\"\n              rows={3}\n              defaultValue=\"Default Value\"\n              value={second}\n              onChange={handleChangeSecond}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.third}\n              multiline\n              label=\"Question 3:\"\n              rows={3}\n              defaultValue=\"Default Value\"\n              value={third}\n              onChange={handleChangeThird}\n            />\n          </div>\n          <button className=\"KanbanModal-input-submit-btn\">Submit</button>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default KanbanModal;\n","import React from \"react\";\nimport \"./KanbanSidebar.css\";\nimport {\n    BsQuestionCircle,\n    BsSearch,\n    BsPersonLinesFill,\n    BsBell,\n} from \"react-icons/bs\";\n\nconst style = { color: \"white\", fontSize: \"1.5rem\", cursor: \"pointer\" };\n\nconst KanbanSidebar = () => {\n    return (\n        <div className=\"KanbanSidebar\">\n            <div className=\"KanbanSidebar-upperColumn\">\n                <BsBell style={style} />\n            </div>\n            <div className=\"KanbanSidebar-bottomColumn\">\n                <BsPersonLinesFill style={style} />\n                <BsSearch style={style} />\n                <BsQuestionCircle style={style} />\n            </div>\n        </div>\n    );\n};\n\nexport default KanbanSidebar;\n","import React from \"react\";\r\nimport \"./KanbanPopup.css\";\r\nimport useInputState from \"./useInputState\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst KanbanPopup = (props) => {\r\n  const [first, handleChangeFirst] = useInputState(\"\");\r\n  const [second, handleChangeSecond] = useInputState(\"\");\r\n  const [third, handleChangeThird] = useInputState(\"\");\r\n\r\n  const columnData = props.columnData;\r\n\r\n  return (\r\n    <div className=\"KanbanPopup\">\r\n      <section className=\"KanbanPopup-content\">\r\n        <span\r\n          className=\"KanbanPopup-close-btn\"\r\n          onClick={props.closePopup}\r\n        ></span>\r\n        <form\r\n          className=\"KanbanPopup-form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"KanbanModal-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.first}\r\n              multiline\r\n              label=\"Question 1:\"\r\n              rows={3}\r\n              defaultValue=\"Default Value\"\r\n              value={first}\r\n              onChange={handleChangeFirst}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanModal-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.second}\r\n              multiline\r\n              label=\"Question 2:\"\r\n              rows={3}\r\n              defaultValue=\"Default Value\"\r\n              value={second}\r\n              onChange={handleChangeSecond}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanModal-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.third}\r\n              multiline\r\n              label=\"Question 3:\"\r\n              rows={3}\r\n              defaultValue=\"Default Value\"\r\n              value={third}\r\n              onChange={handleChangeThird}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"KanbanPopup-input-submit-btn\"\r\n            onClick={props.closePopup}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanPopup;\r\n","import React, { useEffect, useState } from \"react\";\nimport { columnsRawData } from \"./KanbanData\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport \"./Kanban.css\";\nimport KanbanModal from \"./KanbanModal\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanSidebar from \"./KanbanSidebar\";\nimport KanbanPopup from \"./KanbanPopup\";\n\nconst Kanban = () => {\n  const [columns, setColumns] = useState(\n    JSON.parse(window.localStorage.getItem(\"columns\")) || columnsRawData\n  );\n\n  const [modal, setModal] = useState(false);\n\n  const [popup, setPopup] = useState(false);\n\n  const openPopup = (columnId) => {\n    console.log(columnId);\n    setPopup(columnId);\n  };\n\n  const closePopup = () => {\n    setPopup(false);\n  };\n\n    const onDragEnd = (result) => {\n        const { destination, source } = result;\n\n        if (!destination) {\n            console.log(\"no destination\");\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            console.log(\"index and destination the same\");\n            return;\n        }\n\n        const start = columns[source.droppableId];\n        const finish = columns[destination.droppableId];\n\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            const swapTask = newTaskIds[source.index];\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, swapTask);\n\n            const newColumnsState = columns.map((c) => {\n                if (c.id === start.id) {\n                    c.taskIds = newTaskIds;\n                    return c;\n                } else return c;\n            });\n\n            const newColumnsState2 = [...newColumnsState];\n            setColumns(newColumnsState2);\n        } else {\n            if (finish.id > start.id){\n                openPopup(finish.id);\n            }\n            if (finish.taskIds.length < finish.limit) {\n                const startTaskIds = Array.from(start.taskIds);\n                const [item] = startTaskIds.splice(source.index, 1);\n\n                const finishTaskIds = Array.from(finish.taskIds);\n                finishTaskIds.splice(destination.index, 0, item);\n\n                const newColumnsState = columns.map((c) => {\n                    if (c.id === start.id) {\n                        c.taskIds = startTaskIds;\n                        return c;\n                    } else if (c.id === finish.id) {\n                        c.taskIds = finishTaskIds;\n                        return c;\n                    } else return c;\n                });\n                const newColumnsState2 = [...newColumnsState];\n                setColumns(newColumnsState2);\n            } else return;\n        }\n    };\n\n    const openModal = (data) => {\n        const columnId = data.id;\n        setModal(columnId);\n    };\n\n    const closeModal = () => {\n        setModal(false);\n    };\n\n    const addTask = (newTask) => {\n        setModal(false);\n        const updatedColumns = columns.map((column) => {\n            if (column.id === newTask.idColumn && column.taskIds.length < 5) {\n                column.taskIds.push(newTask);\n                return column;\n            } else return column;\n        });\n        setColumns(updatedColumns);\n    };\n\n    const removeTask = (taskId) => {\n        const updatedColumns = columns\n            .map((column) => {\n                return Object.assign({}, column, {\n                    taskIds: column.taskIds.filter(\n                        (task) => task.id !== taskId\n                    ),\n                });\n            })\n            .filter((column) => column.taskIds.length >= 0);\n        setColumns(updatedColumns);\n    };\n\n    const editTask = (taskId, newUser, newText) => {\n        const updatedColumns = columns.map((column) => {\n            return Object.assign({}, column, {\n                taskIds: column.taskIds.map((task) => {\n                    if (task.id === taskId) {\n                        task.user = newUser;\n                        task.text = newText;\n                        return task;\n                    }\n                    return task;\n                }),\n            });\n        });\n        setColumns(updatedColumns);\n    };\n\n    useEffect(() => {\n        window.localStorage.setItem(\"columns\", JSON.stringify(columns));\n    }, [columns]);\n\n    return (\n      <>\n        <KanbanSidebar />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className=\"Kanban\">\n            {modal && (\n              <KanbanModal\n                closeModal={closeModal}\n                addTask={addTask}\n                columnData={columns[modal - 1]}\n                modal={modal}\n              />\n            )}\n            {popup && popup !== 1 && (\n              <KanbanPopup\n                closePopup={closePopup}\n                columnData={columns[popup - 1]}\n              />\n            )}\n            <h1 className=\"Kanban-title\">Stress Management Kanban Board</h1>\n            <div className=\"Kanban-columns-container\">\n              {columns.map((c) => {\n                return (\n                  <KanbanColumn\n                    columnData={c}\n                    key={c.name}\n                    openModal={openModal}\n                    openPopup={openPopup}\n                    removeTask={removeTask}\n                    editTask={editTask}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </DragDropContext>\n      </>\n    );\n};\n\nexport default Kanban;\n","import Kanban from \"./Kanban\";\nimport React from \"react\"\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Kanban />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}