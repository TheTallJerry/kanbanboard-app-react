{"version":3,"sources":["KanbanData.js","useToggleState.js","useInputState.js","KanbanEditForm.js","KanbanTask.js","KanbanColumn.js","KanbanModal.js","KanbanSidebar.js","KanbanPopup.js","Kanban.js","App.js","reportWebVitals.js","index.js"],"names":["columnsRawData","id","name","limit","color","taskIds","uuidv4","text","idColumn","user","first","second","third","useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","state","setState","useInputState","initialValue","value","setValue","e","target","KanbanEditForm","props","_useInputState","startText","_useInputState2","handleChangeText","_useInputState3","startUser","_useInputState4","handleChangeUser","React","createElement","onSubmit","preventDefault","editTask","taskId","toggle","className","Box","m","pt","TextField","onChange","label","style","padding","width","backgroundColor","concat","KanbanTask","_useToggle","_useToggle2","isEditing","Draggable","draggableId","task","index","provided","Card","Object","assign","draggableProps","dragHandleProps","ref","innerRef","sx","margin","Fragment","CardHeader","title","CardContent","Typography","variant","CardActions","disableSpacing","IconButton","aria-label","onClick","EditIcon","removeTask","DeleteIcon","KanbanColumn","columnData","Droppable","droppableId","droppableProps","map","key","placeholder","Button","openModal","disabled","KanbanModal","handleChangeTask","_useInputState5","_useInputState6","handleChangeFirst","_useInputState7","_useInputState8","handleChangeSecond","_useInputState9","_useInputState10","handleChangeThird","newTask","modal","closeModal","addTask","display","type","fullWidth","helperText","multiline","rows","defaultValue","fontSize","cursor","KanbanSidebar","BsBell","BsPersonLinesFill","BsSearch","BsQuestionCircle","KanbanPopup","closePopup","Kanban","JSON","parse","window","localStorage","getItem","columns","setColumns","_useState3","_useState4","setModal","_useState5","_useState6","popup","setPopup","openPopup","columnId","console","log","data","updatedColumns","column","filter","newUser","newText","useEffect","setItem","stringify","DragDropContext","onDragEnd","result","destination","source","start","finish","newTaskIds","Array","from","swapTask","splice","newColumnsState","c","newColumnsState2","_toConsumableArray","startTaskIds","_startTaskIds$splice","item","finishTaskIds","push","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26735458.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nconst taskLimitNumber = 5;\n\nexport const columnsRawData = [\n  {\n    id: 1,\n    name: \"TODO\",\n    limit: taskLimitNumber,\n    color: \"#A162D8 \",\n    taskIds: [\n      {\n        id: uuidv4(),\n        text: \"Nap\",\n        idColumn: 1,\n        user: \"Jacky\",\n      },\n      {\n        id: uuidv4(),\n        text: \"More nap\",\n        idColumn: 1,\n        user: \"Jacky\",\n      },\n    ],\n    first:\n      \"What's the situation? Feel free to explain it in as much detail as you'd like.\",\n    second: \"What part of the situation is most troubling?\",\n    third:\n      \"Why did you decide to take this action (there're countless ways to reduce stress, why this specific one in this specific case)?\",\n  },\n  {\n    id: 2,\n    name: \"In progress\",\n    limit: taskLimitNumber,\n    color: \"#5A9DF9\",\n    taskIds: [\n      { id: uuidv4(), text: \"Gaming\", idColumn: 2, user: \"Jerry\" },\n    ],\n    first:\n      \"How are you feeling at this very moment, right before starting this activity? What's on your mind?\",\n    second:\n      \"What kind of state of mind are you hoping to land on after this activity?\",\n    third: \"Why did you decide to start this activity at this moment?\",\n  },\n  {\n    id: 3,\n    name: \"Done\",\n    limit: taskLimitNumber,\n    color: \"#1387BE\",\n    taskIds: [\n      { id: uuidv4(), text: \"Jogging\", idColumn: 3, user: \"Jerry\" },\n    ],\n    first:\n      \"Re-type the summary of the situation in the following format: Trigger: Thought: Feeling: Behaviour\",\n    second: \"How did your plan/expectations go? What worked and what didn't?\",\n    third:\n      \"If you were to explore an alternative activity, how would you do it? Why?\",\n  },\n];\n","import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal);\n    const toggle = () => {\n        setState(!state);\n    };\n    return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    return [value, handleChange];\n};\n","import React from \"react\";\nimport useInputState from \"./useInputState\";\nimport \"./KanbanEditForm.css\";\nimport { Box, TextField } from \"@mui/material\";\n\nconst KanbanEditForm = (props) => {\n    const [text, handleChangeText] = useInputState(props.startText);\n    const [user, handleChangeUser] = useInputState(props.startUser);\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.editTask(props.taskId, user, text);\n                props.toggle();\n            }}\n            className=\"KanbanEditForm\"\n        >   \n            <Box m={2} pt={3}>\n                <TextField\n                    value={text}\n                    onChange={handleChangeText}\n                    label=\"Task\"\n                    style={{padding: '10px', width: '100%'}}\n                />\n                <TextField\n                    value={user}\n                    onChange={handleChangeUser}\n                    label=\"For:\"\n                    style={{padding: '10px', width: '100%'}}\n                />\n            </Box>\n            <button\n                className=\"KanbanEditForm-btn\"\n                style={{ backgroundColor: `${props.color}` }}\n            >\n                Save\n            </button>\n        </form>\n    );\n};\n\nexport default KanbanEditForm;\n","import React from \"react\";\nimport \"./KanbanTask.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport useToggle from \"./useToggleState\";\nimport KanbanEditForm from \"./KanbanEditForm\";\nimport { Button, Card, CardHeader, CardContent, Typography, CardActions, IconButton } from \"@mui/material\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst KanbanTask = (props) => {\n    const [isEditing, toggle] = useToggle(false);\n\n    return (\n        <Draggable draggableId={`${props.task.id}`} index={props.index}>\n            {(provided) => (\n                <Card\n                    // className=\"KanbanTask\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    sx={{ margin: '10px' }}\n                >\n                    {isEditing ? (\n                        <KanbanEditForm\n                            color={props.color}\n                            editTask={props.editTask}\n                            taskId={props.task.id}\n                            toggle={toggle}\n                            startUser={props.task.user}\n                            startText={props.task.text}\n                        />\n                    ) : (\n                        <>\n                            <CardHeader title={ props.task.user }/>\n                            <CardContent>\n                                <Typography variant=\"h6\" color=\"text.primary\">\n                                {props.task.text}\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label=\"Edit Task\" onClick={toggle}>\n                                    <EditIcon />\n                                </IconButton>\n                                <IconButton aria-label=\"Delete Task\" onClick={() => props.removeTask(props.task.id)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </CardActions>\n                        </>\n                    )}\n                </Card>\n            )}\n        </Draggable>\n    );\n};\n\nexport default KanbanTask;\n","import React from \"react\";\nimport KanbanTask from \"./KanbanTask\";\nimport \"./KanbanColumn.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Button } from \"@mui/material\";\n\nconst KanbanColumn = (props) => {\n    return (\n        <div\n            className=\"KanbanColumn\"\n            style={{ backgroundColor: `${props.columnData.color}` }}\n        >\n            <div className=\"KanbanColumn-main\">\n                <h2 className=\"KanbanColumn-name\">{props.columnData.name}</h2>\n                <p className=\"KanbanColumn-numbers\">\n                    {props.columnData.taskIds.length} / {props.columnData.limit}\n                    ;\n                </p>\n                    <Droppable droppableId={`${props.columnData.id - 1}`}>\n                        {(provided) => (\n                            <div\n                                ref={provided.innerRef}\n                                className=\"KanbanColumns-tasks-container\"\n                                {...provided.droppableProps}\n                            >\n                                {props.columnData.taskIds.map((task, index) => {\n                                    return (\n                                        <KanbanTask\n                                            key={task.id}\n                                            id={task.id}\n                                            task={task}\n                                            color={props.columnData.color}\n                                            index={index}\n                                            removeTask={props.removeTask}\n                                            editTask={props.editTask}\n                                        />\n                                    );\n                                })}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n            </div>\n            {props.columnData.id === 1 && <Button variant=\"contained\" onClick={() => props.openModal(props.columnData)}\n                disabled={\n                    props.columnData.taskIds.length >= 5 ? true : false\n                }>Add Task\n            </Button>\n            }\n        </div>\n    );\n};\n\nexport default KanbanColumn;\n","import React from \"react\";\nimport \"./KanbanModal.css\";\nimport useInputState from \"./useInputState\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TextField from \"@mui/material/TextField\";\n\nconst KanbanModal = (props) => {\n  const [task, handleChangeTask] = useInputState(\"\");\n  const [user, handleChangeUser] = useInputState(\"\");\n  const [first, handleChangeFirst] = useInputState(\"\");\n  const [second, handleChangeSecond] = useInputState(\"\");\n  const [third, handleChangeThird] = useInputState(\"\");\n\n  const columnData = props.columnData;\n\n  const newTask = {\n    id: uuidv4(),\n    text: task,\n    idColumn: props.modal,\n    user: user,\n  };\n\n  return (\n    <div className=\"KanbanModal\">\n      <section className=\"KanbanModal-content\">\n        <span\n          className=\"KanbanModal-close-btn\"\n          onClick={props.closeModal}\n        ></span>\n        <form\n          className=\"KanbanModal-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            props.addTask(newTask);\n          }}\n        >\n          <div style={{display: 'flex'}}>\n            <TextField\n              id=\"filled-search\"\n              label=\"Task:\"\n              type=\"search\"\n              value={task}\n              fullWidth\n              variant=\"standard\"\n              onChange={handleChangeTask}\n              style={{padding: 6}}\n            />\n            <TextField\n              id=\"filled-search\"\n              label=\"For:\"\n              type=\"search\"\n              value={user}\n              variant=\"standard\"\n              fullWidth\n              onChange={handleChangeUser}\n              style={{padding: 6}}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.first}\n              multiline\n              label=\"Question 1:\"\n              rows={3}\n              fullWidth\n              defaultValue=\"Default Value\"\n              value={first}\n              onChange={handleChangeFirst}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.second}\n              multiline\n              label=\"Question 2:\"\n              rows={3}\n              fullWidth\n              defaultValue=\"Default Value\"\n              value={second}\n              onChange={handleChangeSecond}\n            />\n          </div>\n          <div className=\"KanbanModal-input-container\">\n            <TextField\n              id=\"standard-multiline-static\"\n              helperText={columnData.third}\n              multiline\n              label=\"Question 3:\"\n              rows={3}\n              fullWidth\n              defaultValue=\"Default Value\"\n              value={third}\n              onChange={handleChangeThird}\n            />\n          </div>\n          <div className=\"KanbanModal-footer\">\n            <button className=\"KanbanModal-input-submit-btn\">Submit</button>\n          </div>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default KanbanModal;\n","import React from \"react\";\nimport \"./KanbanSidebar.css\";\nimport {\n    BsQuestionCircle,\n    BsSearch,\n    BsPersonLinesFill,\n    BsBell,\n} from \"react-icons/bs\";\n\nconst style = { color: \"white\", fontSize: \"1.5rem\", cursor: \"pointer\" };\n\nconst KanbanSidebar = () => {\n    return (\n        <div className=\"KanbanSidebar\">\n            <div className=\"KanbanSidebar-upperColumn\">\n                <BsBell style={style} />\n            </div>\n            <div className=\"KanbanSidebar-bottomColumn\">\n                <BsPersonLinesFill style={style} />\n                <BsSearch style={style} />\n                <BsQuestionCircle style={style} />\n            </div>\n        </div>\n    );\n};\n\nexport default KanbanSidebar;\n","import React from \"react\";\r\nimport \"./KanbanPopup.css\";\r\nimport useInputState from \"./useInputState\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst KanbanPopup = (props) => {\r\n  const [first, handleChangeFirst] = useInputState(\"\");\r\n  const [second, handleChangeSecond] = useInputState(\"\");\r\n  const [third, handleChangeThird] = useInputState(\"\");\r\n\r\n  const columnData = props.columnData;\r\n\r\n  return (\r\n    <div className=\"KanbanPopup\">\r\n      <section className=\"KanbanPopup-content\">\r\n        <span\r\n          className=\"KanbanPopup-close-btn\"\r\n          onClick={props.closePopup}\r\n        ></span>\r\n        <form\r\n          className=\"KanbanPopup-form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"KanbanModal-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.first}\r\n              multiline\r\n              label=\"Question 1:\"\r\n              rows={3}\r\n              defaultValue=\"Default Value\"\r\n              value={first}\r\n              fullWidth\r\n              onChange={handleChangeFirst}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanModal-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.second}\r\n              multiline\r\n              label=\"Question 2:\"\r\n              rows={3}\r\n              defaultValue=\"Default Value\"\r\n              value={second}\r\n              fullWidth\r\n              onChange={handleChangeSecond}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanModal-input-container\">\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              helperText={columnData.third}\r\n              multiline\r\n              label=\"Question 3:\"\r\n              rows={3}\r\n              defaultValue=\"Default Value\"\r\n              value={third}\r\n              fullWidth\r\n              onChange={handleChangeThird}\r\n            />\r\n          </div>\r\n          <div className=\"KanbanPopup-footer\">\r\n            <button\r\n              className=\"KanbanPopup-input-submit-btn\"\r\n              onClick={props.closePopup}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanPopup;\r\n","import React, { useEffect, useState } from \"react\";\nimport { columnsRawData } from \"./KanbanData\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport \"./Kanban.css\";\nimport KanbanModal from \"./KanbanModal\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanSidebar from \"./KanbanSidebar\";\nimport KanbanPopup from \"./KanbanPopup\";\n\nconst Kanban = () => {\n  const [columns, setColumns] = useState(\n    JSON.parse(window.localStorage.getItem(\"columns\")) || columnsRawData\n  );\n\n  const [modal, setModal] = useState(false);\n\n  const [popup, setPopup] = useState(false);\n\n  const openPopup = (columnId) => {\n    console.log(columnId);\n    setPopup(columnId);\n  };\n\n  const closePopup = () => {\n    setPopup(false);\n  };\n\n    const onDragEnd = (result) => {\n        const { destination, source } = result;\n\n        if (!destination) {\n            console.log(\"no destination\");\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            console.log(\"index and destination the same\");\n            return;\n        }\n\n        const start = columns[source.droppableId];\n        const finish = columns[destination.droppableId];\n\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n\n            const swapTask = newTaskIds[source.index];\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, swapTask);\n\n            const newColumnsState = columns.map((c) => {\n                if (c.id === start.id) {\n                    c.taskIds = newTaskIds;\n                    return c;\n                } else return c;\n            });\n\n            const newColumnsState2 = [...newColumnsState];\n            setColumns(newColumnsState2);\n        } else {\n            if (finish.id > start.id){\n                openPopup(finish.id);\n            }\n            if (finish.taskIds.length < finish.limit) {\n                const startTaskIds = Array.from(start.taskIds);\n                const [item] = startTaskIds.splice(source.index, 1);\n\n                const finishTaskIds = Array.from(finish.taskIds);\n                finishTaskIds.splice(destination.index, 0, item);\n\n                const newColumnsState = columns.map((c) => {\n                    if (c.id === start.id) {\n                        c.taskIds = startTaskIds;\n                        return c;\n                    } else if (c.id === finish.id) {\n                        c.taskIds = finishTaskIds;\n                        return c;\n                    } else return c;\n                });\n                const newColumnsState2 = [...newColumnsState];\n                setColumns(newColumnsState2);\n            } else return;\n        }\n    };\n\n    const openModal = (data) => {\n        const columnId = data.id;\n        setModal(columnId);\n    };\n\n    const closeModal = () => {\n        setModal(false);\n    };\n\n    const addTask = (newTask) => {\n        setModal(false);\n        const updatedColumns = columns.map((column) => {\n            if (column.id === newTask.idColumn && column.taskIds.length < 5) {\n                column.taskIds.push(newTask);\n                return column;\n            } else return column;\n        });\n        setColumns(updatedColumns);\n    };\n\n    const removeTask = (taskId) => {\n        const updatedColumns = columns\n            .map((column) => {\n                return Object.assign({}, column, {\n                    taskIds: column.taskIds.filter(\n                        (task) => task.id !== taskId\n                    ),\n                });\n            })\n            .filter((column) => column.taskIds.length >= 0);\n        setColumns(updatedColumns);\n    };\n\n    const editTask = (taskId, newUser, newText) => {\n        const updatedColumns = columns.map((column) => {\n            return Object.assign({}, column, {\n                taskIds: column.taskIds.map((task) => {\n                    if (task.id === taskId) {\n                        task.user = newUser;\n                        task.text = newText;\n                        return task;\n                    }\n                    return task;\n                }),\n            });\n        });\n        setColumns(updatedColumns);\n    };\n\n    useEffect(() => {\n        window.localStorage.setItem(\"columns\", JSON.stringify(columns));\n    }, [columns]);\n\n    return (\n      <>\n        <KanbanSidebar />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className=\"Kanban\">\n            {modal && (\n              <KanbanModal\n                closeModal={closeModal}\n                addTask={addTask}\n                columnData={columns[modal - 1]}\n                modal={modal}\n              />\n            )}\n            {popup && popup !== 1 && (\n              <KanbanPopup\n                closePopup={closePopup}\n                columnData={columns[popup - 1]}\n              />\n            )}\n            <h1 className=\"Kanban-title\">Stress Management Kanban Board</h1>\n            <div className=\"Kanban-columns-container\">\n              {columns.map((c) => {\n                return (\n                  <KanbanColumn\n                    columnData={c}\n                    key={c.name}\n                    openModal={openModal}\n                    openPopup={openPopup}\n                    removeTask={removeTask}\n                    editTask={editTask}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        </DragDropContext>\n      </>\n    );\n};\n\nexport default Kanban;\n","import Kanban from \"./Kanban\";\nimport React from \"react\"\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Kanban />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}